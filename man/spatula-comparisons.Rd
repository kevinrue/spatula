% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparisons.R
\docType{methods}
\name{spatula-comparisons}
\alias{spatula-comparisons}
\alias{order,SpatialPoints-method}
\alias{sort,SpatialPoints-method}
\alias{unique,SpatialPoints-method}
\alias{duplicated,SpatialPoints-method}
\alias{Ops,SpatialPoints,SpatialPoints-method}
\alias{match,SpatialPoints,SpatialPoints-method}
\alias{\%in\%,SpatialPoints,SpatialPoints-method}
\alias{order,SpatialPolygons-method}
\alias{sort,SpatialPolygons-method}
\alias{unique,SpatialPolygons-method}
\alias{duplicated,SpatialPolygons-method}
\alias{Ops,SpatialPolygons,SpatialPolygons-method}
\alias{match,SpatialPolygons,SpatialPolygons-method}
\alias{\%in\%,SpatialPolygons,SpatialPolygons-method}
\alias{order,.PointsVector-method}
\alias{order,.PolygonsVector-method}
\title{Comparisons for \pkg{sp} classes}
\description{
Implements comparison methods for \pkg{sp} classes including ordering and matching.
}
\section{Sorting}{

\code{order(..., na.last=TRUE, decreasing=FALSE, method=c("auto", "shell", "radix"))} 
returns an integer permutation vector that arranges the first argument of \code{...} in ascending or descending order,
see \code{?"base::order"} for more details.
\code{...} should contain one or more \linkS4class{SpatialPoints} objects of the same dimensionality;
or one or more \linkS4class{SpatialPolygons} objects.

\code{sort(x, decreasing=FALSE, ...)} returns \code{x} in sorted order, see \code{?"base::sort"} for more details.
\code{x} may be a \linkS4class{SpatialPoints} or \linkS4class{SpatialPolygons} object.

Ordering of points inside a \linkS4class{SpatialPoints} object is determined by the value of the first dimension;
and then the second dimension, if the first is tied; and so on for all available dimensions.
Ordering of polygons inside a \linkS4class{SpatialPolygons} object is determined by the coordinates of the polygon centroid,
with comparisons between successive dimensions as described above.
}

\section{Duplicates}{

\code{duplicated(x, incomparables=FALSE, ...)} returns a logical vector indicating whether each entry of \code{x}
is a duplicate of a previous elemen, see \code{?"base::duplicated"} for more details.
\code{x} may be a \linkS4class{SpatialPoints} or \linkS4class{SpatialPolygons} object.

\code{unique(x, incomparables=FALSE, ...)} returns \code{x}
after removing all of the duplicated points, see \code{?"base::unique"} for more details.
\code{x} may be a \linkS4class{SpatialPoints} or \linkS4class{SpatialPolygons} object.

In a \linkS4class{SpatialPoints} object, a point is considered as duplicate of another point if they have exactly the same coordinates.
No consideration is given towards numerical imprecision.
In a \linkS4class{SpatialPolygons} object, polygons are considered to be duplicated if they have the same coordinates
and other attributes (e.g., ring direction, whether or not it is a hole).
}

\section{Comparisons}{

Boolean operations like \code{x == y} can be performed if both \code{x} and \code{y} are:
\itemize{
\item two \linkS4class{SpatialPoints} objects of the same dimensionality.
\item two \linkS4class{SpatialPolygons} objects.
}
This returns a logical vector indicating whether each point in \code{x} is equal to, less than or greater than 
(depending on the operator) the corresponding point in \code{y}.
If \code{x} and \code{y} are not of the same length, the shorter object is recycled.

\code{match(x, table, nomatch=NA_integer, incomparables=FALSE, ...)} 
returns an integer vector of length equal to that of \code{x}.
Each element of this vector specifies an entry in \code{table} that is equal to the corresponding entry in \code{x}.

In \linkS4class{SpatialPoints} objects, points are compared to each other by considering the vectors of their coordinates.
If all coordinates are exactly equal, so are the points;
the first unequal coordinate is used to determine which point is \dQuote{greater than} or \dQuote{less than} the other.
In \linkS4class{SpatialPolygons} objects, polygons are compared to each other by considering the vectors of their centroid coordinates.
}

\examples{
# For SpatialPoints:
coords <- matrix(runif(30), nrow=10)
X <- sp::SpatialPoints(coords)

order(X)
sort(X)
match(X, X[2:5])
unique(X[c(1,1,1,2,2,3)])

X==X
coords2 <- matrix(runif(15), nrow=5)
Y <- sp::SpatialPoints(coords2)
X < Y
X > Y

# For SpatialPolygons:
spm <- makeSpatialPolygons(
    rbind(c(0,0), c(0.5, 0.2), c(0.2, 0.6), c(0.9, 0.8)),
    rbind(c(1,1), c(0.3, 0.7), c(0.1, 0.2), c(0.8, 0.3))
)

order(spm)
sort(spm)
match(spm, spm[2:1])
unique(c(spm, spm))

spm==spm
spm2 <- makeSpatialPolygons(
    rbind(c(0,0), c(0.4, 0.2), c(0.2, 0.6), c(0.9, 0.8)),
    rbind(c(1,1.1), c(0.3, 0.7), c(0.1, 0.2), c(0.8, 0.3))
)
spm < spm2
spm > spm2

}
\author{
Aaron Lun
}
