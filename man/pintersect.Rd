% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pintersect.R
\name{pintersect}
\alias{pintersect}
\alias{pintersect,SpatialPolygons,SpatialPolygons-method}
\alias{punion,SpatialPolygons,SpatialPolygons-method}
\alias{psetdiff,SpatialPolygons,SpatialPolygons-method}
\title{Parallel set operations on polygons}
\usage{
\S4method{pintersect}{SpatialPolygons,SpatialPolygons}(x, y)

\S4method{punion}{SpatialPolygons,SpatialPolygons}(x, y)

\S4method{psetdiff}{SpatialPolygons,SpatialPolygons}(x, y)
}
\arguments{
\item{x, y}{\linkS4class{SpatialPolygons} objects to be processed in parallel.
The shorter object is recycled to the same length as the larger object.}
}
\value{
A \linkS4class{SpatialPolygons} object representing the intersection, union or difference of the polygons.
}
\description{
Perform set operations such as intersections and unions on two parallel \linkS4class{SpatialPolygons} objects.
Requires installation of the \pkg{rgeos} package.
}
\details{
These functions iterate through \code{x} and \code{y} simultaneously to take the intersection, union, etc. 
of the corresponding polygons in the two objects.

If the intersection is empty, a polygon is returned with zero area and all vertices at the origin.
This is necessary because, unfortunately, the \linkS4class{Polygons} constructor does not support empty lists.

Lines or points formed by intersections are currently ignored.
}
\examples{
poly <- makeSpatialPolygons(
    rbind(c(0,0), c(0.5, 0), c(0.5, 0.5), c(0, 0.5)),
    rbind(c(1,1), c(0.5, 1), c(0.5, 0.5), c(1, 0.5)),
    rbind(c(0.5,0), c(1, 0), c(1, 0.5), c(0.5, 0.5)),
    rbind(c(0,1), c(0.5, 1), c(0.5, 0.5), c(0, 0.5))
)
plot(poly)

other.poly <- makeSpatialPolygons(
    rbind(c(0.1,0.1), c(0.7, 0.1), c(0.7, 0.7), c(0.1, 0.7))
)

intersected <- pintersect(poly, other.poly)
plot(intersected[1], xlim=c(0, 1), ylim=c(0, 1))

unioned <- punion(poly, other.poly)
plot(unioned[1], xlim=c(0, 1), ylim=c(0, 1))

diffed <- psetdiff(poly, other.poly)
plot(diffed[1], xlim=c(0, 1), ylim=c(0, 1))

}
\author{
Aaron Lun
}
